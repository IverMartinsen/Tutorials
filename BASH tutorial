#!/bin/bash

# This is a BASH (Bourne-Again SHell) script and doesn't require a file extension for it to be executable. In general it should start with <#!/bin/bash>.
# BASH script are run in a terminal by the command <bash my-script>, and should be stored in the ~/bin/ directory.
# Note that the filename must be commented if it consists of two separate words, e.g. by the command <bash "my script">.

# To make the script executable, run chmod +x my_script
# Then, the script can be run by ./my_script

# print out hello world
echo "Hello, world!"

# create a variable (note that no spacing is allowed)
my_variable=2

# print variable value
echo "This is my variable:"
echo $my_variable

# You can also define conditionals in BASH. Note that the if statement requires spacing before/after square brackets, and must be ended by fi.
# Logical operators include:
# -gt = greater than
# -lt = less than
# -eq = equal
# -ne = not equal
# -ge = greater than or equal
# -le = less than or equal
# -z = is null
if [ $my_variable -gt 1 ]
then
    echo $my_variable" is greater than 1."
else
    echo $my_variable" is not greater than 1."
fi

# You can access terminal input arguments by $0, $1, $2, ...
echo "This script is named "$0
echo "The first argument for this script is "$1

# This is an example of an array, and how to print out the 3rd element
my_array=(element1 element2 element3)
echo ${my_array[2]}

# You can also do arithmetic
a=2
b=3
echo "$a + $b is equal to "$(($a + $b))

# Other supported operations are -, /, *, **, %

# touch command creates empty file
# <touch my_file> creates a single file: "my_file"
# <touch my file> creates two files: "my" and "file"
# <touch "my file" creates a single file: "my file"

